# Fluentd DaemonSet Configuration for AI-SMS Lead Platform
# Version: v1.16-debian-elasticsearch7-1
# Dependencies:
# - kubernetes v1.27
# - fluentd v1.16
# - elasticsearch 8.9.0

---
# ServiceAccount for Fluentd
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  labels:
    app: fluentd
    component: logging

---
# ClusterRole for Fluentd permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  labels:
    app: fluentd
    component: logging
rules:
- apiGroups: [""]
  resources:
    - "pods"
    - "namespaces"
  verbs: ["get", "list", "watch"]

---
# ClusterRoleBinding for Fluentd
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd
  labels:
    app: fluentd
    component: logging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: default

---
# ConfigMap for Fluentd configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  labels:
    app: fluentd
    component: logging
data:
  fluent.conf: |
    # Input plugins
    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    # Kubernetes metadata enrichment
    <filter kubernetes.**>
      @type kubernetes_metadata
      watch false
      cache_size 10000
      cache_ttl 7200
    </filter>

    # Output configuration
    <match kubernetes.**>
      @type elasticsearch
      host elasticsearch.svc.cluster.local
      port 9200
      scheme https
      ssl_verify false
      ssl_version TLSv1_2
      user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
      password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"
      
      index_name ai-sms-logs-%Y.%m.%d
      type_name fluentd
      
      # Buffer configuration
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.system.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever false
        retry_max_interval 30
        chunk_limit_size 2M
        queue_limit_length 8
        overflow_action block
      </buffer>
      
      # Connection configuration
      request_timeout 30s
      reload_connections false
      reconnect_on_error true
      reload_on_failure true
      include_timestamp true
    </match>

    # Monitoring
    <source>
      @type monitor_agent
      bind 0.0.0.0
      port 24231
      tag fluentd.monitor
    </source>

---
# DaemonSet for Fluentd
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  labels:
    app: fluentd
    component: logging
spec:
  selector:
    matchLabels:
      app: fluentd
      component: logging
  template:
    metadata:
      labels:
        app: fluentd
        component: logging
      annotations:
        security.kubernetes.io/pod-security: restricted
        prometheus.io/scrape: "true"
        prometheus.io/port: "24231"
    spec:
      serviceAccount: fluentd
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        fsGroup: 2000
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1.16-debian-elasticsearch7-1
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        env:
        - name: FLUENT_ELASTICSEARCH_HOST
          value: "elasticsearch.svc.cluster.local"
        - name: FLUENT_ELASTICSEARCH_PORT
          value: "9200"
        - name: FLUENT_ELASTICSEARCH_SCHEME
          value: "https"
        - name: FLUENT_ELASTICSEARCH_USER
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: username
        - name: FLUENT_ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: password
        - name: FLUENTD_SYSTEMD_CONF
          value: "disable"
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        volumeMounts:
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluentd-config
          mountPath: /fluentd/etc
        - name: buffer-storage
          mountPath: /var/log/fluentd-buffers
        livenessProbe:
          httpGet:
            path: /metrics
            port: 24231
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /metrics
            port: 24231
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluentd-config
        configMap:
          name: fluentd-config
      - name: buffer-storage
        emptyDir: {}