# PostgreSQL StatefulSet Configuration for AI-SMS Lead Platform
# Version: 1.0.0
# Dependencies:
# - postgresql:15.0
# - kubernetes:v1.27
# - high-iops-ssd StorageClass

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: app
  labels:
    app: postgresql
    tier: database
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
spec:
  replicas: 3  # High availability with 3 replicas
  serviceName: postgresql
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
      annotations:
        backup.velero.io/backup-volumes: data
    spec:
      terminationGracePeriodSeconds: 60
      # Ensure pods are distributed across different nodes
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: postgresql
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/database
                    operator: Exists
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true
      initContainers:
        - name: init-permissions
          image: busybox:1.35
          command: ['sh', '-c', 'chown -R 999:999 /var/lib/postgresql/data']
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          securityContext:
            runAsUser: 0
      containers:
        - name: postgresql
          image: postgres:15.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgresql
          env:
            - name: POSTGRES_DB
              value: lead_platform
            - name: POSTGRES_USER
              value: app
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_REPLICATION_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: custom-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
            - name: custom-config
              mountPath: /etc/postgresql/pg_hba.conf
              subPath: pg_hba.conf
          resources:
            requests:
              cpu: "2"
              memory: "4Gi"
            limits:
              cpu: "4"
              memory: "8Gi"
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - app
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - app
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            exec:
              command:
                - pg_isready
                - -U
                - app
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 30
        - name: metrics
          image: prometheuscommunity/postgres-exporter:v0.11.1
          ports:
            - containerPort: 9187
              name: metrics
          env:
            - name: DATA_SOURCE_URI
              value: localhost:5432/lead_platform?sslmode=disable
            - name: DATA_SOURCE_USER
              value: app
            - name: DATA_SOURCE_PASS
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_PASSWORD
      volumes:
        - name: custom-config
          configMap:
            name: postgresql-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: high-iops-ssd
        resources:
          requests:
            storage: 100Gi
---
# Headless service for StatefulSet DNS entries
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: app
  labels:
    app: postgresql
spec:
  clusterIP: None
  ports:
    - port: 5432
      targetPort: postgresql
      protocol: TCP
      name: postgresql
    - port: 9187
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app: postgresql