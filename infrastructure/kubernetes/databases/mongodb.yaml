# MongoDB StatefulSet Configuration for AI-SMS Lead Platform
# Version: 1.0.0
# Dependencies:
# - mongodb:7.0
# - kubernetes:v1.27
# - aws-ebs-csi-driver
# Purpose: High-availability MongoDB deployment for message history and conversation threads

# StatefulSet Definition
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: app
  labels:
    app: mongodb
    tier: database
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/part-of: ai-sms-lead-platform
    app.kubernetes.io/managed-by: kustomize
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9216"
    backup.velero.io/backup-volumes: "data"
    encryption.aws/kms: "true"
    mongodb.platform.io/version: "7.0"
spec:
  replicas: 3
  serviceName: mongodb
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
        tier: database
      annotations:
        security.platform.io/last-updated: "2024-01-01"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9216"
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - mongodb
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: mongodb
          image: mongodb:7.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
              name: mongodb
            - containerPort: 9216
              name: metrics
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MONGODB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MONGODB_ROOT_PASSWORD
            - name: MONGODB_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MONGODB_ENCRYPTION_KEY
          volumeMounts:
            - name: data
              mountPath: /data/db
            - name: config
              mountPath: /config
              readOnly: true
            - name: secrets
              mountPath: /etc/mongodb/secrets
              readOnly: true
          resources:
            requests:
              memory: "4Gi"
              cpu: "2"
            limits:
              memory: "8Gi"
              cpu: "4"
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('replSetGetStatus')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
        - name: mongodb-exporter
          image: bitnami/mongodb-exporter:0.33.0
          ports:
            - containerPort: 9216
              name: metrics
          env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: MONGODB_URI
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
      volumes:
        - name: config
          configMap:
            name: mongodb-config
        - name: secrets
          secret:
            secretName: app-secrets
            defaultMode: 0400
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: high-iops-ssd
        resources:
          requests:
            storage: 100Gi
---
# Headless Service for MongoDB StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: app
  labels:
    app: mongodb
    tier: database
spec:
  clusterIP: None
  ports:
    - port: 27017
      targetPort: mongodb
      name: mongodb
    - port: 9216
      targetPort: metrics
      name: metrics
  selector:
    app: mongodb
---
# Network Policy for MongoDB
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mongodb-network-policy
  namespace: app
spec:
  podSelector:
    matchLabels:
      app: mongodb
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              tier: application
        - podSelector:
            matchLabels:
              app: mongodb
      ports:
        - port: 27017
        - port: 9216
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: mongodb
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - port: 9216