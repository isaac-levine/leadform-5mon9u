# AWS Secrets Configuration for Lead Platform Services
# Version: 1.0.0
# Purpose: Secure storage of AWS credentials and configuration for service integrations
# Security: Enhanced with encryption, RBAC, audit logging and automated rotation

apiVersion: v1
kind: Secret
metadata:
  name: aws-secrets
  namespace: app # Referenced from namespaces.yaml
  labels:
    app.kubernetes.io/name: aws-secrets
    app.kubernetes.io/part-of: lead-platform
    app.kubernetes.io/managed-by: manual
    security.platform.io/audited: "true"
    security.platform.io/rotation-required: "true"
    security.platform.io/compliance-level: "high"
    security.platform.io/data-classification: "restricted"
  annotations:
    # Encryption and Security
    encryption.platform.io/encrypted: "true"
    encryption.platform.io/key-version: "v1"
    encryption.platform.io/encryption-provider: "aws-kms"
    
    # Audit Configuration
    audit.platform.io/enabled: "true"
    audit.platform.io/level: "Metadata"
    audit.platform.io/retention-days: "90"
    
    # Rotation Configuration
    rotation.platform.io/last-rotated: "2024-01-01T00:00:00Z"
    rotation.platform.io/next-rotation: "2024-04-01T00:00:00Z"
    rotation.platform.io/rotation-period: "90d"
    
    # Access Control
    rbac.platform.io/allowed-service-accounts: "form-service,sms-service"
    rbac.platform.io/access-level: "read-only"
    
    # Monitoring
    monitoring.platform.io/alert-on-access: "true"
    monitoring.platform.io/alert-threshold: "10/minute"
    monitoring.platform.io/backup-enabled: "true"

type: Opaque
data:
  # AWS Core Credentials
  AWS_ACCESS_KEY_ID: "${BASE64_ENCODED_ACCESS_KEY}"
  AWS_SECRET_ACCESS_KEY: "${BASE64_ENCODED_SECRET_KEY}"
  AWS_REGION: "${BASE64_ENCODED_REGION}"
  
  # S3 Configuration
  AWS_S3_BUCKET: "${BASE64_ENCODED_BUCKET_NAME}"
  AWS_S3_ENDPOINT: "${BASE64_ENCODED_ENDPOINT}"
  AWS_S3_USE_PATH_STYLE: "${BASE64_ENCODED_PATH_STYLE}"
  AWS_S3_FORCE_PATH_STYLE: "${BASE64_ENCODED_FORCE_PATH}"
  
  # SQS Configuration
  AWS_SQS_QUEUE_URL: "${BASE64_ENCODED_QUEUE_URL}"
  AWS_SQS_ENDPOINT: "${BASE64_ENCODED_SQS_ENDPOINT}"
  AWS_SQS_REGION: "${BASE64_ENCODED_SQS_REGION}"
  
  # Additional Security Configuration
  AWS_SDK_LOAD_CONFIG: "${BASE64_ENCODED_TRUE}"
  AWS_SDK_SECURE_CLOCK: "${BASE64_ENCODED_TRUE}"
  AWS_RETRY_MODE: "${BASE64_ENCODED_STANDARD}"
  AWS_MAX_ATTEMPTS: "${BASE64_ENCODED_3}"

---
# Associated RBAC Configuration
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: aws-secrets-reader
  namespace: app
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["aws-secrets"]
  verbs: ["get"]

---
# Service Account Binding for Form Service
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: form-service-aws-secrets
  namespace: app
subjects:
- kind: ServiceAccount
  name: form-service
  namespace: app
roleRef:
  kind: Role
  name: aws-secrets-reader
  apiGroup: rbac.authorization.k8s.io

---
# Service Account Binding for SMS Service
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sms-service-aws-secrets
  namespace: app
subjects:
- kind: ServiceAccount
  name: sms-service
  namespace: app
roleRef:
  kind: Role
  name: aws-secrets-reader
  apiGroup: rbac.authorization.k8s.io