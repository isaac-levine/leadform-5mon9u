# SMS Service Kubernetes Configuration
# Version: 1.0.0
# Dependencies:
# - kubernetes:apps/v1
# - mongodb:7.0
# Purpose: Deployment and configuration of the SMS microservice with HA, scaling, and monitoring

---
# Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sms-service
  namespace: app
  labels:
    app: sms-service
    tier: application
    app.kubernetes.io/name: sms-service
    app.kubernetes.io/part-of: ai-sms-lead-platform
    app.kubernetes.io/managed-by: kustomize
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3002"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: sms-service
  template:
    metadata:
      labels:
        app: sms-service
        tier: application
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3002"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: sms-service
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
      containers:
        - name: sms-service
          image: sms-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3002
              name: http
          envFrom:
            - configMapRef:
                name: sms-service-config
            - secretRef:
                name: app-secrets
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "2000m"
              memory: "2Gi"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: sms-service-config

---
# Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: sms-service
  namespace: app
  labels:
    app: sms-service
    tier: application
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3002"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
    - port: 3002
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: sms-service

---
# ConfigMap for SMS Service Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: sms-service-config
  namespace: app
data:
  NODE_ENV: "production"
  SMS_SERVICE_PORT: "3002"
  SMS_SERVICE_HOST: "0.0.0.0"
  MESSAGE_QUEUE_NAME: "sms-messages"
  QUEUE_PREFIX: "prod"
  QUEUE_ATTEMPTS: "3"
  QUEUE_BACKOFF: "exponential"
  RATE_LIMIT_WINDOW: "60000"
  RATE_LIMIT_MAX: "100"
  AI_SERVICE_TIMEOUT: "500"
  METRICS_ENABLED: "true"
  METRICS_PREFIX: "sms_service"
  CIRCUIT_BREAKER_TIMEOUT: "5000"
  CIRCUIT_BREAKER_RESET: "10000"
  MAX_RETRIES: "3"
  MONGODB_HOST: "mongodb.app.svc.cluster.local"

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sms-service-hpa
  namespace: app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sms-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Pods
          value: 2
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 120

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: sms-service-pdb
  namespace: app
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: sms-service

---
# Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sms-service-network-policy
  namespace: app
spec:
  podSelector:
    matchLabels:
      app: sms-service
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              tier: application
      ports:
        - port: 3002
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: mongodb
      ports:
        - port: 27017
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - port: 9216