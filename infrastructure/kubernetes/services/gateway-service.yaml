# API Gateway Service Deployment Manifest
# Version: 1.0.0
# Purpose: Handles routing, authentication, rate limiting and load balancing
# Security: OWASP, SOC 2 compliant with enhanced security features

apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-service
  namespace: app
  labels:
    app.kubernetes.io/name: gateway-service
    app.kubernetes.io/part-of: lead-platform
    app.kubernetes.io/component: api-gateway
    security-tier: restricted
  annotations:
    security.platform.io/compliance: "SOC2,GDPR,CCPA"
    security.platform.io/audit-level: "high"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gateway-service
        security-tier: restricted
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        security.platform.io/seccomp-profile: "runtime/default"
    spec:
      serviceAccountName: gateway-service-sa
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - gateway-service
              topologyKey: kubernetes.io/hostname
      containers:
      - name: gateway
        image: gateway-service:1.0.0
        imagePullPolicy: Always
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 9090
          name: metrics
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: LOG_LEVEL
          value: "info"
        - name: FORM_SERVICE_URL
          value: "http://form-service:3000"
        - name: SMS_SERVICE_URL
          value: "http://sms-service:3000"
        - name: AI_SERVICE_URL
          value: "http://ai-service:3000"
        envFrom:
        - secretRef:
            name: app-secrets
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: config
        configMap:
          name: gateway-service-config
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: app
  labels:
    app.kubernetes.io/name: gateway-service
    app.kubernetes.io/part-of: lead-platform
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: gateway-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gateway-service
  namespace: app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gateway-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gateway-service-pdb
  namespace: app
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway-service